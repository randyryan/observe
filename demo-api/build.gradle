/*
 * Copyright (c) 2023 Li Wan
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
plugins {
    id 'java-library'
    id 'org.springframework.boot'
    id 'io.spring.dependency-management'
    id 'org.openapi.generator' version '7.5.0'
    id 'com.github.node-gradle.node' version '3.5.0'
}

group = 'works.lifeops.observe'
version = '0.0.1-SNAPSHOT'

sourceCompatibility = '17'

repositories {
    mavenCentral()
}

sourceSets {
    main {
        java {
            srcDirs += ["${buildDir}/generated/openapi/src/main/java"]
        }
    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.data:spring-data-commons'
    implementation 'io.springfox:springfox-swagger2:3.0.0'
    implementation 'io.swagger.core.v3:swagger-annotations:2.2.20'
    implementation 'org.openapitools:jackson-databind-nullable:0.2.6'
    implementation "jakarta.annotation:jakarta.annotation-api"
    implementation 'jakarta.validation:jakarta.validation-api:3.0.2'
}

task spotGenerate(type: NpxTask) {
    dependsOn npmInstall

    command = '@airtasker/spot'
    args = [
            'generate',
            '--contract', 'src/main/api/api.ts',
            '--generator', 'openapi3',
            '--language', 'yaml',
            '--out', "${buildDir}/api/"
    ]
}

openApiGenerate {
    generatorName = 'spring'
    inputSpec = "${buildDir}/api/api.yml".toString()
    outputDir = "${buildDir}/generated/openapi".toString()
    templateDir = "${projectDir}/src/main/template/spring".toString()
    apiPackage = 'works.lifeops.observe.prom4j.api'
    modelPackage = 'works.lifeops.observe.prom4j.api.dto'
    modelNameSuffix = 'Dto'
    apiFilesConstrainedTo = ['']
    modelFilesConstrainedTo = ['']
    supportingFilesConstrainedTo = ['ApiUtil.java']
    configOptions = [
        delegatePattern: 'true',
        title: 'service',
        documentationProvider: 'springdoc',
        useSpringBoot3: 'true'
    ]
    schemaMappings = [
        Pageable: 'org.springframework.data.domain.Pageable',
        Page: 'org.springframework.data.domain.Page'
    ]
    validateSpec = true
}

tasks.openApiGenerate.dependsOn tasks.spotGenerate
tasks.compileJava.dependsOn tasks.openApiGenerate
